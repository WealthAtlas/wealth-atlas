FROM node:18-slim AS build

# Install pnpm
RUN npm install -g pnpm

# Create app directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY apps/backend/package.json ./apps/backend/

# Install dependencies using pnpm workspaces
RUN pnpm install

# Copy app source
COPY apps/backend ./apps/backend

# Build backend using pnpm workspace
WORKDIR /app
RUN pnpm run build:backend

# Production image
FROM node:slim

WORKDIR /app

# Copy package files and build
COPY --from=build /app/package.json ./
COPY --from=build /app/package-lock.json ./
COPY --from=build /app/apps/backend ./apps/backend

# Install production dependencies only
RUN pnpm install --prod --filter ./apps/backend

# Set working directory to backend
WORKDIR /app/apps/backend

# Expose port
EXPOSE 3000

# Create healthcheck script for MongoDB connection
RUN echo '#!/bin/sh\n\
if [ -z "$MONGODB_URI" ]; then\n\
  echo "MONGODB_URI is not set"\n\
  exit 1\n\
fi\n\
node -e \"const mongoose = require('mongoose'); mongoose.connect(process.env.MONGODB_URI).then(() => { console.log('MongoDB connected'); process.exit(0); }).catch(err => { console.error('MongoDB connection error:', err); process.exit(1); })\"\n\
' > /app/healthcheck.sh && chmod +x /app/healthcheck.sh

# Start app
CMD ["node", "dist/main"]
